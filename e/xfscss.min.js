export function loadFScript(a,b=!0){const c=document.createElement("script");c.type="text/javascript",c.async=b,a="https://cdn.jsdelivr.net/gh/Figsh/FSCSS@main/rtF4.js",c.src=a,document.body.appendChild(c)}

export function applyFscssStyles(){document.querySelectorAll('[type*="fscss"]').forEach(a=>{fetch(a.href).then(b=>b.text()).then(b=>{const c=document.createElement("style");c.textContent=b,document.head.appendChild(c)}).catch(b=>{console.error(`Failed to load FSCSS from ${a.href}`,b)})})}

export function inf({host:h,path:p}){if(!h||!p){console.error("Both 'host' and 'path' are required.");return}const a=h.replace(/github/gi,"gh"),b=p.replace(/\s*->\s*/g,"/").replace(/\n/g,""),c=`https://cdn.jsdelivr.net/${a}/${b}`;loadFScript(c)}

export function exec({type:t="text",content:c,onError:e,onSuccess:s}){if(!c){const a="No CSS content or URL provided.";console.error(a),e&&e(a);return}const a=document.createElement("style"),b=d=>{a.textContent=d,document.head.appendChild(a),s&&s(a)};if(t==="text"||t==="auto"||t==="text/fscss"||t==="text/css")b(c);else if(t==="fromUrl"||t==="URL"||t==="fromURL"||t==="link")fetch(c).then(f=>{if(!f.ok)throw new Error(`HTTP error! Status: ${f.status}`);return f.text()}).then(b).catch(f=>{console.error(`Failed to load CSS from URL: ${c}`,f),e&&e(f.message)});else{const d=`Unsupported type "${t}". Use "text" or "fromUrl".`;console.error(d),e&&e(d)}}